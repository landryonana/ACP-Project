# matrice diagonale des inverses des écart-type
matriceDiagInverseEcartType=function(m){
#invPoidEcartyp=1/sd(m,na.rm = TRUE)
#p = invPoidEcartyp*diag( nrow(t(m)) )
poids=matricePoids(m)
#matrice des variances
v = t( matriceCentrer(m) ) %*% poids %*% matriceCentrer(m)
#matrice diagonale des inverses des écart-type
mIeC = sqrt( diag(v) ) %*%diag( nrow(v) )
return(round(v,1))
}
# matrice centré-réduit
matriceCentrerReduit=function(m){
z = matriceCentrer(m)%*%matriceDiagInverseEcartType(m)
return(round(z,1))
}
matriceDiagInverseEcartType(landry)
# matrice des Poids
matricePoids=function(m){
#recupération du nombre de ligne de la matrice "m"
poids=1/nrow(m)
return( poids*diag(nrow(m)) )
}
# moyenne des variables
matriceMoyenne=function(m){
poids = round( matricePoids(m) , 3 )
g = t(m)%*%as.matrix( diag(poids ) )
return(g)
}
# matrice centré
matriceCentrer=function(m){
y = m - ( as.matrix( ( rep( 1,nrow(m) ) ) ) %*% t( matriceMoyenne(m) ) )
return(round(y,1))
}
# matrice diagonale des inverses des écart-type
matriceDiagInverseEcartType=function(m){
#invPoidEcartyp=1/sd(m,na.rm = TRUE)
#p = invPoidEcartyp*diag( nrow(t(m)) )
poids=matricePoids(m)
#matrice des variances
v = t( matriceCentrer(m) ) %*% poids %*% matriceCentrer(m)
#matrice diagonale des inverses des écart-type
mIeC = sqrt( diag(v) ) %*%diag( nrow(v) )
return(round(mIeC,1))
}
# matrice centré-réduit
matriceCentrerReduit=function(m){
z = matriceCentrer(m)%*%matriceDiagInverseEcartType(m)
return(round(z,1))
}
matriceDiagInverseEcartType(landry)
# matrice des Poids
matricePoids=function(m){
#recupération du nombre de ligne de la matrice "m"
poids=1/nrow(m)
return( poids*diag(nrow(m)) )
}
# moyenne des variables
matriceMoyenne=function(m){
poids = round( matricePoids(m) , 3 )
g = t(m)%*%as.matrix( diag(poids ) )
return(g)
}
# matrice centré
matriceCentrer=function(m){
y = m - ( as.matrix( ( rep( 1,nrow(m) ) ) ) %*% t( matriceMoyenne(m) ) )
return(round(y,1))
}
# matrice diagonale des inverses des écart-type
matriceDiagInverseEcartType=function(m){
#invPoidEcartyp=1/sd(m,na.rm = TRUE)
#p = invPoidEcartyp*diag( nrow(t(m)) )
poids=matricePoids(m)
#matrice des variances
v = t( matriceCentrer(m) ) %*% poids %*% matriceCentrer(m)
#matrice diagonale des inverses des écart-type
mIeC = 1/sqrt( diag(v) ) %*% diag( nrow(v) )
return(round(mIeC,1))
}
# matrice centré-réduit
matriceCentrerReduit=function(m){
z = matriceCentrer(m)%*%matriceDiagInverseEcartType(m)
return(round(z,1))
}
matriceDiagInverseEcartType(landry)
# matrice des Poids
matricePoids=function(m){
#recupération du nombre de ligne de la matrice "m"
poids=1/nrow(m)
return( poids*diag(nrow(m)) )
}
# moyenne des variables
matriceMoyenne=function(m){
poids = round( matricePoids(m) , 3 )
g = t(m)%*%as.matrix( diag(poids ) )
return(g)
}
# matrice centré
matriceCentrer=function(m){
y = m - ( as.matrix( ( rep( 1,nrow(m) ) ) ) %*% t( matriceMoyenne(m) ) )
return(round(y,1))
}
# matrice diagonale des inverses des écart-type
matriceDiagInverseEcartType=function(m){
#invPoidEcartyp=1/sd(m,na.rm = TRUE)
#p = invPoidEcartyp*diag( nrow(t(m)) )
poids=matricePoids(m)
#matrice des variances
v = t( matriceCentrer(m) ) %*% poids %*% matriceCentrer(m)
#matrice diagonale des inverses des écart-type
mIeC = (1/sqrt( diag(v) )) %*% diag( nrow(v) )
return(round(mIeC,1))
}
# matrice centré-réduit
matriceCentrerReduit=function(m){
z = matriceCentrer(m)%*%matriceDiagInverseEcartType(m)
return(round(z,1))
}
matriceDiagInverseEcartType(landry)
as.matrix(matriceDiagInverseEcartType(landry))
sqrDiag=1/sqrt( diag(v) )
sqrDiag=1/sqrt( diag(landry) )
# matrice des Poids
matricePoids=function(m){
#recupération du nombre de ligne de la matrice "m"
poids=1/nrow(m)
return( poids*diag(nrow(m)) )
}
# moyenne des variables
matriceMoyenne=function(m){
poids = round( matricePoids(m) , 3 )
g = t(m)%*%as.matrix( diag(poids ) )
return(g)
}
# matrice centré
matriceCentrer=function(m){
y = m - ( as.matrix( ( rep( 1,nrow(m) ) ) ) %*% t( matriceMoyenne(m) ) )
return(round(y,1))
}
# matrice diagonale des inverses des écart-type
matriceDiagInverseEcartType=function(m){
#invPoidEcartyp=1/sd(m,na.rm = TRUE)
#p = invPoidEcartyp*diag( nrow(t(m)) )
poids=matricePoids(m)
#matrice des variances
v = t( matriceCentrer(m) ) %*% poids %*% matriceCentrer(m)
#matrice diagonale des inverses des écart-type
sqrDiag=1/sqrt( diag(v) )
mIeC = sqrDiag * diag( nrow(v) )
return(round(mIeC,1))
}
# matrice centré-réduit
matriceCentrerReduit=function(m){
z = matriceCentrer(m)%*%matriceDiagInverseEcartType(m)
return(round(z,1))
}
matriceDiagInverseEcartType(landry)
matriceCentrerReduit(landry)
# matrice des Poids
matricePoids=function(m){
#recupération du nombre de ligne de la matrice "m"
poids=1/nrow(m)
return( poids*diag(nrow(m)) )
}
# moyenne des variables
matriceMoyenne=function(m){
poids = round( matricePoids(m) , 3 )
g = t(m)%*%as.matrix( diag(poids ) )
return(g)
}
# matrice centré
matriceCentrer=function(m){
y = m - ( as.matrix( ( rep( 1,nrow(m) ) ) ) %*% t( matriceMoyenne(m) ) )
return(round(y,1))
}
# matrice diagonale des inverses des écart-type
matriceDiagInverseEcartType=function(m){
#invPoidEcartyp=1/sd(m,na.rm = TRUE)
#p = invPoidEcartyp*diag( nrow(t(m)) )
poids=matricePoids(m)
#matrice des variances
v = t( matriceCentrer(m) ) %*% poids %*% matriceCentrer(m)
#matrice diagonale des inverses des écart-type
sqrDiag=1/sqrt( diag(v) )
mIeC = sqrDiag * diag( nrow(v) )
return(round(mIeC,1))
}
# matrice centré-réduit
matriceCentrerReduit=function(m){
z = matriceCentrer(m)%*%matriceDiagInverseEcartType(m)
return(round(z,1))
}
# matrice centré-réduit
matriceCoorelation=function(m){
r = t( matriceCentrerRedui(m) ) %*% matricePoids(m) %*% matriceCentrerRedui(m)
return(round(r,1))
}
matriceCoorelation(landry)
# matrice des Poids
matricePoids=function(m){
#recupération du nombre de ligne de la matrice "m"
poids=1/nrow(m)
return( poids*diag(nrow(m)) )
}
# moyenne des variables
matriceMoyenne=function(m){
poids = round( matricePoids(m) , 3 )
g = t(m)%*%as.matrix( diag(poids ) )
return(g)
}
# matrice centré
matriceCentrer=function(m){
y = m - ( as.matrix( ( rep( 1,nrow(m) ) ) ) %*% t( matriceMoyenne(m) ) )
return(round(y,1))
}
# matrice diagonale des inverses des écart-type
matriceDiagInverseEcartType=function(m){
#invPoidEcartyp=1/sd(m,na.rm = TRUE)
#p = invPoidEcartyp*diag( nrow(t(m)) )
poids=matricePoids(m)
#matrice des variances
v = t( matriceCentrer(m) ) %*% poids %*% matriceCentrer(m)
#matrice diagonale des inverses des écart-type
sqrDiag=1/sqrt( diag(v) )
mIeC = sqrDiag * diag( nrow(v) )
return(round(mIeC,1))
}
# matrice centré-réduit
matriceCentrerReduit=function(m){
z = matriceCentrer(m)%*%matriceDiagInverseEcartType(m)
return(round(z,1))
}
# matrice centré-réduit
matriceCoorelation=function(m){
r = t( matriceCentrerReduit(m) ) %*% matricePoids(m) %*% matriceCentrerRedui(m)
return(round(r,1))
}
matriceCoorelation(landry)
# matrice des Poids
matricePoids=function(m){
#recupération du nombre de ligne de la matrice "m"
poids=1/nrow(m)
return( poids*diag(nrow(m)) )
}
# moyenne des variables
matriceMoyenne=function(m){
poids = round( matricePoids(m) , 3 )
g = t(m)%*%as.matrix( diag(poids ) )
return(g)
}
# matrice centré
matriceCentrer=function(m){
y = m - ( as.matrix( ( rep( 1,nrow(m) ) ) ) %*% t( matriceMoyenne(m) ) )
return(round(y,1))
}
# matrice diagonale des inverses des écart-type
matriceDiagInverseEcartType=function(m){
#invPoidEcartyp=1/sd(m,na.rm = TRUE)
#p = invPoidEcartyp*diag( nrow(t(m)) )
poids=matricePoids(m)
#matrice des variances
v = t( matriceCentrer(m) ) %*% poids %*% matriceCentrer(m)
#matrice diagonale des inverses des écart-type
sqrDiag=1/sqrt( diag(v) )
mIeC = sqrDiag * diag( nrow(v) )
return(round(mIeC,1))
}
# matrice centré-réduit
matriceCentrerReduit=function(m){
z = matriceCentrer(m)%*%matriceDiagInverseEcartType(m)
return(round(z,1))
}
# matrice centré-réduit
matriceCoorelation=function(m){
r = t( matriceCentrerReduit(m) ) %*% matricePoids(m) %*% matriceCentrerRedui(m)
return(round(r,1))
}
matriceCoorelation(landry)
# matrice des Poids
matricePoids=function(m){
#recupération du nombre de ligne de la matrice "m"
poids=1/nrow(m)
return( poids*diag(nrow(m)) )
}
# moyenne des variables
matriceMoyenne=function(m){
poids = round( matricePoids(m) , 3 )
g = t(m)%*%as.matrix( diag(poids ) )
return(g)
}
# matrice centré
matriceCentrer=function(m){
y = m - ( as.matrix( ( rep( 1,nrow(m) ) ) ) %*% t( matriceMoyenne(m) ) )
return(round(y,1))
}
# matrice diagonale des inverses des écart-type
matriceDiagInverseEcartType=function(m){
#invPoidEcartyp=1/sd(m,na.rm = TRUE)
#p = invPoidEcartyp*diag( nrow(t(m)) )
poids=matricePoids(m)
#matrice des variances
v = t( matriceCentrer(m) ) %*% poids %*% matriceCentrer(m)
#matrice diagonale des inverses des écart-type
sqrDiag=1/sqrt( diag(v) )
mIeC = sqrDiag * diag( nrow(v) )
return(round(mIeC,1))
}
# matrice centré-réduit
matriceCentrerReduit=function(m){
z = matriceCentrer(m)%*%matriceDiagInverseEcartType(m)
return(round(z,1))
}
# matrice centré-réduit
matriceCoorelation=function(m){
r = t( matriceCentrerReduit(m) ) %*% matricePoids(m) %*% matriceCentrerReduit(m)
return(round(r,1))
}
matriceCoorelation(landry)
# matrice des Poids
matricePoids=function(m){
#recupération du nombre de ligne de la matrice "m"
poids=1/nrow(m)
return( poids*diag(nrow(m)) )
}
# moyenne des variables
matriceMoyenne=function(m){
poids = round( matricePoids(m) , 3 )
g = t(m)%*%as.matrix( diag(poids ) )
return(g)
}
# matrice centré
matriceCentrer=function(m){
y = m - ( as.matrix( ( rep( 1,nrow(m) ) ) ) %*% t( matriceMoyenne(m) ) )
return(round(y,1))
}
# matrice diagonale des inverses des écart-type
matriceDiagInverseEcartType=function(m){
#invPoidEcartyp=1/sd(m,na.rm = TRUE)
#p = invPoidEcartyp*diag( nrow(t(m)) )
poids=matricePoids(m)
#matrice des variances
v = t( matriceCentrer(m) ) %*% poids %*% matriceCentrer(m)
#matrice diagonale des inverses des écart-type
sqrDiag=1/sqrt( diag(v) )
mIeC = sqrDiag * diag( nrow(v) )
return(round(mIeC,1))
}
# matrice centré-réduit
matriceCentrerReduit=function(m){
z = matriceCentrer(m)%*%matriceDiagInverseEcartType(m)
return(round(z,1))
}
# matrice des coorélation
matriceCoorelation=function(m){
r = t( matriceCentrerReduit(m) ) %*% matricePoids(m) %*% matriceCentrerReduit(m)
return(round(r,1))
}
# matrice des variance-covariances
matriceVarianceCovariances=function(m){
varCov = t( matriceCentrer(m) ) %*% matricePoids(m) %*% matriceCentrer(m)
return(round(varCov,1))
}
cor=matriceCoorelation(landry)
View(cor)
varCor=matriceVarianceCovariances(landry)
View(varCor)
# matrice des Poids
matricePoids=function(m){
#recupération du nombre de ligne de la matrice "m"
poids=1/nrow(m)
return( poids*diag(nrow(m)) )
}
# moyenne des variables
matriceMoyenne=function(m){
poids = round( matricePoids(m) , 3 )
g = t(m)%*%as.matrix( diag(poids ) )
return(g)
}
# matrice centré
matriceCentrer=function(m){
y = m - ( as.matrix( ( rep( 1,nrow(m) ) ) ) %*% t( matriceMoyenne(m) ) )
return(round(y,1))
}
# matrice diagonale des inverses des écart-type
matriceDiagInverseEcartType=function(m){
#invPoidEcartyp=1/sd(m,na.rm = TRUE)
#p = invPoidEcartyp*diag( nrow(t(m)) )
poids=matricePoids(m)
#matrice des variances
v = t( matriceCentrer(m) ) %*% poids %*% matriceCentrer(m)
#matrice diagonale des inverses des écart-type
sqrDiag=1/sqrt( diag(v) )
mIeC = sqrDiag * diag( nrow(v) )
return(round(mIeC,1))
}
# matrice centré-réduit
matriceCentrerReduit=function(m){
z = matriceCentrer(m)%*%matriceDiagInverseEcartType(m)
return(round(z,1))
}
# matrice des coorélation
matriceCoorelation=function(m){
r = t( matriceCentrerReduit(m) ) %*% matricePoids(m) %*% matriceCentrerReduit(m)
return(round(r,1))
}
# matrice des variance-covariances
matriceVarianceCovariances=function(m){
varCov = t( matriceCentrer(m) ) %*% matricePoids(m) %*% matriceCentrer(m) - matriceMoyenne(m)%*%t(matriceMoyenne(m) )
return(round(varCov,1))
}
matriceVarianceCovariances(landry)
matriceMoyenne(m)%*%t(matriceMoyenne(m) )
matriceMoyenne(landry)%*%t(matriceMoyenne(landry) )
centrerReduit=matriceCentrerReduit(landry)
View(centrerReduit)
matriceMoyenne(centrerRedui)%*%t(matriceMoyenne(centrerRedui) )
matriceMoyenne(centrerReduit)%*%t(matriceMoyenne(centrerReduit) )
# matrice des Poids
matricePoids=function(m){
#recupération du nombre de ligne de la matrice "m"
poids=1/nrow(m)
return( poids*diag(nrow(m)) )
}
# moyenne des variables
matriceMoyenne=function(m){
poids = round( matricePoids(m) , 3 )
g = t(m)%*%as.matrix( diag(poids ) )
return(g)
}
# matrice centré
matriceCentrer=function(m){
y = m - ( as.matrix( ( rep( 1,nrow(m) ) ) ) %*% t( matriceMoyenne(m) ) )
return(round(y,1))
}
# matrice diagonale des inverses des écart-type
matriceDiagInverseEcartType=function(m){
#invPoidEcartyp=1/sd(m,na.rm = TRUE)
#p = invPoidEcartyp*diag( nrow(t(m)) )
poids=matricePoids(m)
#matrice des variances
v = t( matriceCentrer(m) ) %*% poids %*% matriceCentrer(m)
#matrice diagonale des inverses des écart-type
sqrDiag=1/sqrt( diag(v) )
mIeC = sqrDiag * diag( nrow(v) )
return(round(mIeC,1))
}
# matrice centré-réduit
matriceCentrerReduit=function(m){
z = matriceCentrer(m)%*%matriceDiagInverseEcartType(m)
return(round(z,1))
}
# matrice des coorélation
matriceCoorelation=function(m){
r = t( matriceCentrerReduit(m) ) %*% matricePoids(m) %*% matriceCentrerReduit(m)
return(round(r,1))
}
# matrice des variance-covariances
matriceVarianceCovariances=function(m){
varCov = t( matriceCentrer(m) ) %*% matricePoids(m) %*% matriceCentrer(m) - round(matriceMoyenne(m)%*%t(matriceMoyenne(m) ),1)
return(round(varCov,1))
}
matriceMoyenne(centrerReduit)%*%t(matriceMoyenne(centrerReduit) )
round( matriceMoyenne(centrerReduit)%*%t(matriceMoyenne(centrerReduit) ))
# matrice des Poids
matricePoids=function(m){
#recupération du nombre de ligne de la matrice "m"
poids=1/nrow(m)
return( poids*diag(nrow(m)) )
}
# moyenne des variables
matriceMoyenne=function(m){
poids = round( matricePoids(m) , 3 )
g = t(m)%*%as.matrix( diag(poids ) )
return( round(g,1) )
}
# matrice centré
matriceCentrer=function(m){
y = m - ( as.matrix( ( rep( 1,nrow(m) ) ) ) %*% t( matriceMoyenne(m) ) )
return(round(y,1))
}
# matrice diagonale des inverses des écart-type
matriceDiagInverseEcartType=function(m){
#invPoidEcartyp=1/sd(m,na.rm = TRUE)
#p = invPoidEcartyp*diag( nrow(t(m)) )
poids=matricePoids(m)
#matrice des variances
v = t( matriceCentrer(m) ) %*% poids %*% matriceCentrer(m)
#matrice diagonale des inverses des écart-type
sqrDiag=1/sqrt( diag(v) )
mIeC = sqrDiag * diag( nrow(v) )
return(round(mIeC,1))
}
# matrice centré-réduit
matriceCentrerReduit=function(m){
z = matriceCentrer(m)%*%matriceDiagInverseEcartType(m)
return(round(z,1))
}
# matrice des coorélation
matriceCoorelation=function(m){
r = t( matriceCentrerReduit(m) ) %*% matricePoids(m) %*% matriceCentrerReduit(m)
return(round(r,1))
}
# matrice des variance-covariances
matriceVarianceCovariances=function(m){
varCov = t( matriceCentrer(m) ) %*% matricePoids(m) %*% matriceCentrer(m) - round(matriceMoyenne(m)%*%t(matriceMoyenne(m) ),1)
return(round(varCov,1))
}
matriceMoyenne(centrerReduit)%*%t(matriceMoyenne(centrerReduit) )
diag( matriceMoyenne(centrerReduit)%*%t(matriceMoyenne(centrerReduit) ))
sum(diag( matriceMoyenne(centrerReduit)%*%t(matriceMoyenne(centrerReduit) )))
sum(poids)
sum(centrerLandry)
